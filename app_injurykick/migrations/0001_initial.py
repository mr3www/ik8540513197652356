# Generated by Django 5.1.1 on 2024-10-06 08:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('country_code', models.CharField(max_length=2, unique=True)),
                ('country_name', models.CharField(max_length=255)),
                ('country_flag', models.URLField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_id', models.IntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('type', models.CharField(max_length=50)),
                ('image', models.URLField(blank=True, null=True)),
                ('country', models.CharField(max_length=255)),
                ('country_code', models.CharField(max_length=10)),
                ('country_flag', models.URLField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeagueTeam',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('league_id', models.PositiveIntegerField(unique=True)),
                ('league_name', models.CharField(max_length=255)),
                ('team_id', models.PositiveIntegerField()),
                ('team_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_id', models.IntegerField(unique=True)),
                ('title', models.CharField(max_length=255)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('original_url', models.URLField()),
                ('published_at', models.DateTimeField()),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_id', models.IntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('height', models.CharField(blank=True, max_length=10, null=True)),
                ('position', models.CharField(max_length=50)),
                ('image', models.URLField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_id', models.IntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(max_length=255)),
                ('founded', models.IntegerField(blank=True, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('venue_name', models.CharField(max_length=255)),
                ('venue_address', models.CharField(blank=True, max_length=255, null=True)),
                ('venue_city', models.CharField(blank=True, max_length=255, null=True)),
                ('venue_capacity', models.IntegerField(blank=True, null=True)),
                ('venue_surface', models.CharField(blank=True, max_length=50, null=True)),
                ('venue_image', models.URLField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StandingDeduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('points_deduction', models.IntegerField(default=0)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_injurykick.league', to_field='api_id')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standing_deductions', to='app_injurykick.team')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerTeam',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_id', models.IntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('joined', models.DateField()),
                ('left', models.DateField(blank=True, null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_injurykick.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_injurykick.team')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerSeasonStatistics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_id', models.IntegerField(unique=True)),
                ('appearances', models.IntegerField(default=0)),
                ('starting', models.IntegerField(default=0)),
                ('subs_in', models.IntegerField(default=0)),
                ('subs_out', models.IntegerField(default=0)),
                ('bench', models.IntegerField(default=0)),
                ('minutes', models.IntegerField(default=0)),
                ('captain', models.BooleanField(default=False)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('shots_on', models.IntegerField(default=0)),
                ('shots_total', models.IntegerField(default=0)),
                ('goals', models.IntegerField(default=0)),
                ('conceded', models.IntegerField(default=0)),
                ('assists', models.IntegerField(default=0)),
                ('saves', models.IntegerField(default=0)),
                ('passes_total', models.IntegerField(default=0)),
                ('passes_key', models.IntegerField(default=0)),
                ('passes_accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('tackles_total', models.IntegerField(default=0)),
                ('blocks', models.IntegerField(default=0)),
                ('interceptions', models.IntegerField(default=0)),
                ('duels_total', models.IntegerField(default=0)),
                ('duels_won', models.IntegerField(default=0)),
                ('dribbles_attempts', models.IntegerField(default=0)),
                ('dribbles_success', models.IntegerField(default=0)),
                ('dribbles_past', models.IntegerField(default=0)),
                ('fouls_drawn', models.IntegerField(default=0)),
                ('fouls_committed', models.IntegerField(default=0)),
                ('yellow_card', models.IntegerField(default=0)),
                ('yellowred_card', models.IntegerField(default=0)),
                ('red_card', models.IntegerField(default=0)),
                ('penalty_won', models.IntegerField(default=0)),
                ('penalty_committed', models.IntegerField(default=0)),
                ('penalty_scored', models.IntegerField(default=0)),
                ('penalty_missed', models.IntegerField(default=0)),
                ('penalty_saved', models.IntegerField(default=0)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_statistics', to='app_injurykick.league', to_field='api_id')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_statistics', to='app_injurykick.player', to_field='api_id')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_statistics', to='app_injurykick.team', to_field='api_id')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_id', models.IntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('season', models.IntegerField(blank=True, null=True)),
                ('country_name', models.CharField(max_length=255)),
                ('date', models.DateTimeField(db_index=True)),
                ('status', models.CharField(max_length=100)),
                ('referee', models.CharField(blank=True, max_length=255, null=True)),
                ('venue_id', models.IntegerField(blank=True, null=True)),
                ('venue_name', models.CharField(blank=True, max_length=255, null=True)),
                ('venue_city', models.CharField(blank=True, max_length=255, null=True)),
                ('ht_home', models.IntegerField(blank=True, null=True)),
                ('ht_away', models.IntegerField(blank=True, null=True)),
                ('ft_home', models.IntegerField(blank=True, null=True)),
                ('ft_away', models.IntegerField(blank=True, null=True)),
                ('et_home', models.IntegerField(blank=True, null=True)),
                ('et_away', models.IntegerField(blank=True, null=True)),
                ('pk_home', models.IntegerField(blank=True, null=True)),
                ('pk_away', models.IntegerField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='app_injurykick.league', to_field='api_id')),
                ('away', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='app_injurykick.team', to_field='api_id')),
                ('home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='app_injurykick.team', to_field='api_id')),
            ],
        ),
        migrations.CreateModel(
            name='Injury',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_id', models.IntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('injury_type', models.CharField(max_length=255)),
                ('injury_date', models.DateField()),
                ('expected_return', models.DateField(blank=True, null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='injuries', to='app_injurykick.league', to_field='api_id')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='injuries', to='app_injurykick.player', to_field='api_id')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='injuries', to='app_injurykick.team', to_field='api_id')),
            ],
        ),
        migrations.CreateModel(
            name='TeamSeasonStatistics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_id', models.IntegerField(db_index=True, unique=True)),
                ('biggest_goals_home', models.IntegerField(default=0)),
                ('biggest_goals_away', models.IntegerField(default=0)),
                ('biggest_against_home', models.IntegerField(default=0)),
                ('biggest_against_away', models.IntegerField(default=0)),
                ('biggest_lose_home', models.CharField(blank=True, max_length=10, null=True)),
                ('biggest_lose_away', models.CharField(blank=True, max_length=10, null=True)),
                ('biggest_streak_draws', models.IntegerField(default=0)),
                ('biggest_streak_loses', models.IntegerField(default=0)),
                ('biggest_streak_wins', models.IntegerField(default=0)),
                ('biggest_wins_home', models.CharField(blank=True, max_length=10, null=True)),
                ('biggest_wins_away', models.CharField(blank=True, max_length=10, null=True)),
                ('clean_sheet_home', models.IntegerField(default=0)),
                ('clean_sheet_away', models.IntegerField(default=0)),
                ('failed_to_score_home', models.IntegerField(default=0)),
                ('failed_to_score_away', models.IntegerField(default=0)),
                ('draws_away', models.IntegerField(default=0)),
                ('draws_home', models.IntegerField(default=0)),
                ('loses_away', models.IntegerField(default=0)),
                ('loses_home', models.IntegerField(default=0)),
                ('wins_away', models.IntegerField(default=0)),
                ('wins_home', models.IntegerField(default=0)),
                ('form', models.CharField(blank=True, max_length=10, null=True)),
                ('goals_total_home', models.IntegerField(default=0)),
                ('goals_total_away', models.IntegerField(default=0)),
                ('against_total_home', models.IntegerField(default=0)),
                ('against_total_away', models.IntegerField(default=0)),
                ('goals_avg_home', models.FloatField(default=0.0)),
                ('goals_avg_away', models.FloatField(default=0.0)),
                ('against_avg_home', models.FloatField(default=0.0)),
                ('against_avg_away', models.FloatField(default=0.0)),
                ('goals_0_15', models.IntegerField(default=0)),
                ('goals_16_30', models.IntegerField(default=0)),
                ('goals_31_45', models.IntegerField(default=0)),
                ('goals_46_60', models.IntegerField(default=0)),
                ('goals_61_75', models.IntegerField(default=0)),
                ('goals_76_90', models.IntegerField(default=0)),
                ('goals_91_105', models.IntegerField(default=0)),
                ('goals_106_120', models.IntegerField(default=0)),
                ('against_0_15', models.IntegerField(default=0)),
                ('against_16_30', models.IntegerField(default=0)),
                ('against_31_45', models.IntegerField(default=0)),
                ('against_46_60', models.IntegerField(default=0)),
                ('against_61_75', models.IntegerField(default=0)),
                ('against_76_90', models.IntegerField(default=0)),
                ('against_91_105', models.IntegerField(default=0)),
                ('against_106_120', models.IntegerField(default=0)),
                ('favorite_lineups', models.CharField(blank=True, max_length=20, null=True)),
                ('favorite_lineups_count', models.IntegerField(default=0)),
                ('secondary_lineups', models.CharField(blank=True, max_length=20, null=True)),
                ('secondary_lineups_count', models.IntegerField(default=0)),
                ('penalty_missed', models.IntegerField(default=0)),
                ('penalty_scored', models.IntegerField(default=0)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_statistics', to='app_injurykick.league', to_field='api_id')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_statistics', to='app_injurykick.team', to_field='api_id')),
            ],
        ),
        migrations.CreateModel(
            name='StandingDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(max_length=20)),
                ('rank', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standing_descriptions', to='app_injurykick.league', to_field='api_id')),
            ],
            options={
                'unique_together': {('league', 'season', 'rank')},
            },
        ),
    ]
