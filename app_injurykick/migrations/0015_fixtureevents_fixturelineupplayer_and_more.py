# Generated by Django 5.1.1 on 2024-10-30 16:32

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app_injurykick', '0014_leaguestanding_update_time'),
    ]

    operations = [
        migrations.CreateModel(
            name='FixtureEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('events_time_elapsed', models.PositiveIntegerField()),
                ('events_time_extra', models.PositiveIntegerField(blank=True, null=True)),
                ('events_type', models.CharField(max_length=50)),
                ('events_detail', models.TextField()),
                ('events_comment', models.TextField(blank=True, null=True)),
                ('events_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='app_injurykick.player', to_field='api_id')),
                ('events_player_assist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assists', to='app_injurykick.player', to_field='api_id')),
                ('events_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_injurykick.team', to_field='api_id')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixture_events', to='app_injurykick.match', to_field='api_id')),
            ],
        ),
        migrations.CreateModel(
            name='FixtureLineupPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=10)),
                ('shirt_number', models.PositiveIntegerField(blank=True, null=True)),
                ('grid', models.CharField(blank=True, max_length=10, null=True)),
                ('is_starting', models.BooleanField(default=True)),
                ('color_primary', models.CharField(blank=True, max_length=7, null=True)),
                ('color_number', models.CharField(blank=True, max_length=7, null=True)),
                ('color_border', models.CharField(blank=True, max_length=7, null=True)),
                ('color_gk_primary', models.CharField(blank=True, max_length=7, null=True)),
                ('color_gk_number', models.CharField(blank=True, max_length=7, null=True)),
                ('color_gk_border', models.CharField(blank=True, max_length=7, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lineup_players', to='app_injurykick.match', to_field='api_id')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_injurykick.player', to_field='api_id')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_injurykick.team', to_field='api_id')),
            ],
            options={
                'unique_together': {('match', 'team', 'player', 'position')},
            },
        ),
        migrations.CreateModel(
            name='FixturePlayerStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('number', models.PositiveIntegerField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=10, null=True)),
                ('rating', models.CharField(blank=True, max_length=5, null=True)),
                ('captain', models.BooleanField(default=False)),
                ('substitute', models.BooleanField(default=False)),
                ('shots_total', models.PositiveIntegerField(blank=True, null=True)),
                ('shots_on', models.PositiveIntegerField(blank=True, null=True)),
                ('goals_total', models.PositiveIntegerField(blank=True, null=True)),
                ('goals_conceded', models.PositiveIntegerField(blank=True, null=True)),
                ('goals_assists', models.PositiveIntegerField(blank=True, null=True)),
                ('goals_saves', models.PositiveIntegerField(blank=True, null=True)),
                ('passes_total', models.PositiveIntegerField(blank=True, null=True)),
                ('passes_key', models.PositiveIntegerField(blank=True, null=True)),
                ('passes_accuracy', models.CharField(blank=True, max_length=10, null=True)),
                ('tackles_total', models.PositiveIntegerField(blank=True, null=True)),
                ('tackles_blocks', models.PositiveIntegerField(blank=True, null=True)),
                ('tackles_interceptions', models.PositiveIntegerField(blank=True, null=True)),
                ('duels_total', models.PositiveIntegerField(blank=True, null=True)),
                ('duels_won', models.PositiveIntegerField(blank=True, null=True)),
                ('dribbles_attempts', models.PositiveIntegerField(blank=True, null=True)),
                ('dribbles_success', models.PositiveIntegerField(blank=True, null=True)),
                ('dribbles_past', models.PositiveIntegerField(blank=True, null=True)),
                ('fouls_drawn', models.PositiveIntegerField(blank=True, null=True)),
                ('fouls_committed', models.PositiveIntegerField(blank=True, null=True)),
                ('cards_yellow', models.PositiveIntegerField(blank=True, null=True)),
                ('cards_red', models.PositiveIntegerField(blank=True, null=True)),
                ('penalty_won', models.PositiveIntegerField(blank=True, null=True)),
                ('penalty_committed', models.PositiveIntegerField(blank=True, null=True)),
                ('penalty_scored', models.PositiveIntegerField(blank=True, null=True)),
                ('penalty_missed', models.PositiveIntegerField(blank=True, null=True)),
                ('penalty_saved', models.PositiveIntegerField(blank=True, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_statistics', to='app_injurykick.match', to_field='api_id')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_injurykick.player', to_field='api_id')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_injurykick.team', to_field='api_id')),
            ],
            options={
                'unique_together': {('match', 'team', 'player')},
            },
        ),
        migrations.CreateModel(
            name='FixtureTeamStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat_type', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=50)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_statistics', to='app_injurykick.match', to_field='api_id')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_injurykick.team', to_field='api_id')),
            ],
            options={
                'unique_together': {('match', 'team', 'stat_type')},
            },
        ),
    ]
